users.queries.insert-user=\
    insert into users \
    values (DEFAULT, :username, :password, :role_id)

users.queries.is-exists=\
    select exists(select 1 from users where username = :username)

users.queries.get-id-by-username=\
    select id from users where username = :username

users.queries.get-by-id=\
    select u.id as id, u.username as username, u.password as password, \
        r.id as role_id, r.name as role_name, \
        fb.id as favoritebooks_book_id, fb.name as favoritebooks_book_name, \
        fba.id as favoritebooks_book_authors_id, \
        fba.surname as favoritebooks_book_authors_surname, \
        fba.name as favoritebooks_book_authors_name, \
        fb.coverurl as favoritebooks_book_coverurl, \
        f.date as favoritebooks_date, \
        sb.id as statusbooks_book_id, s.id as statusbooks_status_id, \
        s.name as statusbooks_status_name, bs.date as statusbooks_date \
    from users u \
        join roles r on u.roleid = r.id \
        left join favoritebooks f on u.id = f.userid \
        left join books fb on f.bookid = fb.id \
        left join bookauthors fbba on fb.id = fbba.bookid \
        left join authors fba on fbba.authorid = fba.id \
        left join bookstatuses bs on u.id = bs.userid \
        left join books sb on bs.bookid = sb.id \
        left join statuses s on bs.statusid = s.id \
    where u.id = :id \
    order by u.id

users.queries.update-user=\
    update users \
    set username = :username, password = :password, roleid = :role_id \
    where id = :id

users.queries.delete-book-from-favorites=\
    delete from favoritebooks \
    where userid = :userid and bookid = :bookid

users.queries.insert-book-to-favorites=\
    insert into favoritebooks \
    values (:userid, :bookid, DEFAULT)

users.queries.delete-status-from-book=\
    delete from bookstatuses \
    where userid = :userid and bookid = :bookid

users.queries.insert-status-for-book=\
    insert into bookstatuses \
    values (:userid, :bookid, :statusid, DEFAULT)
