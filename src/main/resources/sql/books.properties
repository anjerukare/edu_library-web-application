books.queries.get-all=\
    select b.id as id, b.name as name, \
        a.id as authors_id, surname as authors_surname, \
        a.name as authors_name, patronymic as authors_patronymic, \
        ap.id as authors_publisher_id, ap.username as authors_publisher_username, \
        ap.password as authors_publisher_password, apr.id as authors_publisher_role_id, \
        apr.name as authors_publisher_role_name, \
        a.createdate as authors_createdate, \
        am.id as authors_moderator_id, am.username as authors_moderator_username, \
        am.password as authors_moderator_password, amr.id as authors_moderator_role_id, \
        amr.name as authors_moderator_role_name, \
        a.published as authors_published, \
        t.id as tags_id, t.name as tags_name, t.description as tags_description, \
        annotation, coverurl, bookurl, \
        b.createdate as createdate, \
        b.published as published, \
        bp.id as publisher_id, bp.username as publisher_username, \
        bp.password as publisher_password, bpr.id as publisher_role_id, \
        bpr.name as publisher_role_name, \
        bm.id as moderator_id, bm.username as moderator_username, \
        bm.password as moderator_password, \
        bmr.id as moderator_role_id, bmr.name as moderator_role_name \
    from books b \
        join bookauthors ba on b.id = ba.bookid \
        join authors a on ba.authorid = a.id \
        join users ap on a.publisherid = ap.id \
        join roles apr on ap.roleid = apr.id \
        left join users am on a.moderatorid = am.id \
        left join roles amr on am.roleid = amr.id \
        left join booktags bt on b.id = bt.bookid \
        left join tags t on bt.tagid = t.id \
        join users bp on b.publisherid = bp.id \
        join roles bpr on bp.roleid = bpr.id \
        left join users bm on b.moderatorid = bm.id \
        left join roles bmr on bm.roleid = bmr.id \
    order by b.id

books.query-pieces.insert-book=\
    with book as ( \
        insert into books \
        values (DEFAULT, :name, :annotation, :coverurl, \
        :bookurl, :publisherid, :createdate, :moderatorid, :published) \
        returning id \
    )
books.query-pieces.add-junction-with-author.i=\
    , \
    insert_author%1$d as ( \
        insert into bookauthors \
        select id, :authors_%1$d_id from book \
    )
books.query-pieces.add-junction-with-tag.i=\
    , \
    insert_tag%1$d as ( \
        insert into booktags \
        select id, :tags_%1$d_id from book \
    )
books.query-pieces.add-junction-with-author.n=\
    insert into bookauthors \
    select id, :authors_%d_id from book

books.queries.get-by-id=\
    select b.id as id, b.name as name, \
        a.id as authors_id, surname as authors_surname, \
        a.name as authors_name, patronymic as authors_patronymic, \
        ap.id as authors_publisher_id, ap.username as authors_publisher_username, \
        ap.password as authors_publisher_password, apr.id as authors_publisher_role_id, \
        apr.name as authors_publisher_role_name, \
        a.createdate as authors_createdate, \
        am.id as authors_moderator_id, am.username as authors_moderator_username, \
        am.password as authors_moderator_password, amr.id as authors_moderator_role_id, \
        amr.name as authors_moderator_role_name, \
        a.published as authors_published, \
        t.id as tags_id, t.name as tags_name, t.description as tags_description, \
        annotation, coverurl, bookurl, \
        b.createdate as createdate, \
        b.published as published, \
        bp.id as publisher_id, bp.username as publisher_username, \
        bp.password as publisher_password, bpr.id as publisher_role_id, \
        bpr.name as publisher_role_name, \
        bm.id as moderator_id, bm.username as moderator_username, \
        bm.password as moderator_password, \
        bmr.id as moderator_role_id, bmr.name as moderator_role_name \
    from books b \
        join bookauthors ba on b.id = ba.bookid \
        join authors a on ba.authorid = a.id \
        join users ap on a.publisherid = ap.id \
        join roles apr on ap.roleid = apr.id \
        left join users am on a.moderatorid = am.id \
        left join roles amr on am.roleid = amr.id \
        left join booktags bt on b.id = bt.bookid \
        left join tags t on bt.tagid = t.id \
        join users bp on b.publisherid = bp.id \
        join roles bpr on bp.roleid = bpr.id \
        left join users bm on b.moderatorid = bm.id \
        left join roles bmr on bm.roleid = bmr.id \
    where b.id = :id \
    order by b.id

books.queries.search=\
    select b.id as id, b.name as name, \
        a.id as authors_id, surname as authors_surname, \
        a.name as authors_name, patronymic as authors_patronymic, \
        ap.id as authors_publisher_id, ap.username as authors_publisher_username, \
        ap.password as authors_publisher_password, apr.id as authors_publisher_role_id, \
        apr.name as authors_publisher_role_name, \
        a.createdate as authors_createdate, \
        am.id as authors_moderator_id, am.username as authors_moderator_username, \
        am.password as authors_moderator_password, amr.id as authors_moderator_role_id, \
        amr.name as authors_moderator_role_name, \
        a.published as authors_published, \
        t.id as tags_id, t.name as tags_name, t.description as tags_description, \
        annotation, coverurl, bookurl, \
        b.createdate as createdate, \
        b.published as published, \
        bp.id as publisher_id, bp.username as publisher_username, \
        bp.password as publisher_password, bpr.id as publisher_role_id, \
        bpr.name as publisher_role_name, \
        bm.id as moderator_id, bm.username as moderator_username, \
        bm.password as moderator_password, \
        bmr.id as moderator_role_id, bmr.name as moderator_role_name \
    from books b \
        join bookauthors ba on b.id = ba.bookid \
        join authors a on ba.authorid = a.id \
        join users ap on a.publisherid = ap.id \
        join roles apr on ap.roleid = apr.id \
        left join users am on a.moderatorid = am.id \
        left join roles amr on am.roleid = amr.id \
        left join booktags bt on b.id = bt.bookid \
        left join tags t on bt.tagid = t.id \
        join users bp on b.publisherid = bp.id \
        join roles bpr on bp.roleid = bpr.id \
        left join users bm on b.moderatorid = bm.id \
        left join roles bmr on bm.roleid = bmr.id \
    where b.id in ( \
        select b.id from books b \
            join bookauthors ba on b.id = ba.bookid \
            join authors a on ba.authorid = a.id \
        where lower(b.name) like lower('%' || :query || '%') or \
            lower(a.surname) like lower('%' || :query || '%') or \
            lower(a.name) like lower('%' || :query || '%') \
    ) \
    order by b.id

books.query-pieces.update-book=\
    with book as ( \
        update books set name = :name, annotation = :annotation, coverurl = :coverurl, \
        bookurl = :bookurl, publisherid = :publisherid, createdate = :createdate, \
        moderatorid = :moderatorid, published = :published where id = :id \
        returning id \
    )
books.query-pieces.delete-junctions-with-tags=\
    , \
    delete_junctions_with_tags as ( \
        delete from booktags where bookid \
        in(select id from book) \
    )
books.query-pieces.delete-junctions-with-authors=\
    delete from bookauthors where bookid \
    in(select id from book)

books.query-pieces.delete-book=\
    with book as ( \
        delete from books where id = :id \
        returning id \
    )
